package luka.teum.telegram_service.command;

import luka.teum.telegram_service.command.base.BaseCommand;
import luka.teum.telegram_service.command.base.Commands;
import luka.teum.telegram_service.mapping.UserMapping;
import luka.teum.telegram_service.model.entity.User;
import luka.teum.telegram_service.service.UserService;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.bots.AbsSender;


@Component
public class StartCommand extends BaseCommand {

    public static final String HELLO_MESSAGE = """
            –ü—Ä–∏–≤–µ—Ç, üß† –ª—é–±–∏—Ç–µ–ª—å –≥–æ–ª–æ–≤–æ–ª–æ–º–æ–∫! %s!
                        
            –Ø ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–µ—à–µ–Ω–∏—é —Å—É–¥–æ–∫—É. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω–æ–π —Å–µ—Ç–∫–æ–π —Å—É–¥–æ–∫—É, –∏ —è –±—ã—Å—Ç—Ä–æ –Ω–∞–π–¥—É —Ä–µ—à–µ–Ω–∏–µ!
                        
            ‚ú® –ß—Ç–æ —è —É–º–µ—é:
            ‚Ä¢ –†–µ—à–∞—Ç—å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Å—É–¥–æ–∫—É 9x9 –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            ‚Ä¢ –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –≤ —É–¥–æ–±–Ω–æ–º, —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            ‚Ä¢ –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                        
            –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π ¬´üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å—É–¥–æ–∫—É¬ª –Ω–∏–∂–µ.
                        
            –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ö–æ–º–∞–Ω–¥–∞ /help —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –æ–±–æ –≤—Å–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ!
            """;

    private final UserService userService;
    private final UserMapping userMapping;

    public StartCommand(UserService userService, UserMapping userMapping) {
        super(Commands.START);
        this.userService = userService;
        this.userMapping = userMapping;
    }

    @Override
    public void processMessage(AbsSender absSender, Message message, String[] strings) {
        User user = createUser(message);
        printHello(user, message, absSender);
    }

    private User createUser(Message message) {
        Long userTelegramId = message.getFrom().getId();
        if (!userService.existsByTelegramId(userTelegramId)) {
            User user = userMapping.getUserEntityByChart(message.getChat());
            return userService.save(user);
        } else {
            return userService.getUserByTelegramId(userTelegramId);
        }
    }

    private void printHello(User user, Message message, AbsSender absSender) {
        String text = String.format(HELLO_MESSAGE, user.getFirstName());

        SendMessage answer = new SendMessage();
        answer.setChatId(String.valueOf(message.getChatId()));
        answer.setText(text);
        answer.setParseMode("HTML");

        sendMessage(answer, absSender);
    }

}
